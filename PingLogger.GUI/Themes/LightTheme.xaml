<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PingLogger.GUI"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <SolidColorBrush x:Key="BackgroundColour"  Color="White" />

    <SolidColorBrush x:Key="WindowBorderColour"  Color="WhiteSmoke" />
    <SolidColorBrush x:Key="WindowTitleColour"  Color="WhiteSmoke" />

    <SolidColorBrush x:Key="ContainerBackground" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="ContainerBorder" Color="#FFE1E1E1"/>

    <SolidColorBrush x:Key="ControlDarkerBackground"  Color="#FFC8C8C8" />
    <SolidColorBrush x:Key="ControlDarkerBorderBrush" Color="#FF646464" />

    <SolidColorBrush x:Key="ControlDefaultBackground"  Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="ControlDefaultBorderBrush" Color="#FF848484" />
    <SolidColorBrush x:Key="ControlDefaultForeground"  Color="#FF050505" />

    <SolidColorBrush x:Key="ControlBrightDefaultBackground"  Color="#FFE8E8E8" />
    <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush"  Color="#FFB4B4B4" />

    <SolidColorBrush x:Key="ControlDisabledBackground"  Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="ControlDisabledBorderBrush"  Color="#FFADB2B5" />

    <SolidColorBrush x:Key="ControlMouseOverBackground"  Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="ControlMouseOverBorderBrush" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="ControlSelectedBackground" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="ControlSelectedBorderBrush" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBackground" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBorderBrush" Color="#FF3C7FB1"/>

    <SolidColorBrush x:Key="ControlGlythColour"  Color="#FAFAFA" />
    <SolidColorBrush x:Key="ControlMouseOverGlythColour"  Color="#c9c9c9" />
    <SolidColorBrush x:Key="ControlSelectedGlythColour"  Color="#bfbfbf" />
    <SolidColorBrush x:Key="ControlDisabledGlythColour"  Color="#FF838383" />

    <SolidColorBrush x:Key="ControlPrimarySpecialColour"  Color="#FF0B63CD" />
    <SolidColorBrush x:Key="ControlSecondarySpecialColour" Color="#FFD86413"/>

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColour}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource ContainerBackground}" />
        <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="2" 
                              CaptionHeight="39"
                              GlassFrameThickness="2"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="7,39,7,7">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>

                        <Grid Height="32"
                              Background="{StaticResource WindowTitleColour}"
                            VerticalAlignment="Top" Margin="7,7,7,0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Image HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="20" Margin="6" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"  />
                            <TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       FontSize="16"
                                       Foreground="{DynamicResource ControlDefaultForeground}"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                                       Grid.Column="1"/>


                            <StackPanel Orientation="Horizontal"
                                        Grid.Column="2">
								<Button x:Name="btnMinimize"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Width="50"
                                        VerticalContentAlignment="Bottom"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MinimizeWindowCommand}">
									<Image Source="/Resources/minimizeWindowLight.png" Margin="7"/>
								</Button>
								<Button x:Name="btnClose"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Template="{DynamicResource CloseWindowButton}"
                                        Width="50"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding CloseWindowCommand}">
                                    <Image Source="/Resources/closeWindowLight.png" Margin="7"/>
                                </Button>

                            </StackPanel>
                        </Grid>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="CustomDialogStyle" TargetType="{x:Type Window}">
		<Setter Property="BorderBrush" Value="{StaticResource ContainerBackground}" />
		<Setter Property="Background" Value="{StaticResource BackgroundColour}" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CornerRadius="2" 
                              CaptionHeight="39"
                              GlassFrameThickness="2"/>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Grid>
						<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="7,39,7,7">
							<AdornerDecorator>
								<ContentPresenter />
							</AdornerDecorator>
						</Border>

						<Grid Height="32"
                              Background="{StaticResource WindowTitleColour}"
                            VerticalAlignment="Top" Margin="7,7,7,0">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="32"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<Image HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="20" Margin="6" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"  />
							<TextBlock Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       FontSize="16"
                                       Foreground="{DynamicResource ControlDefaultForeground}"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                                       Grid.Column="1"/>


							<StackPanel Orientation="Horizontal"
                                        Grid.Column="2">
								<Button x:Name="btnClose"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Template="{DynamicResource CloseWindowButton}"
                                        Width="50"
                                        WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding CloseWindowCommand}">
									<Image Source="/Resources/closeWindowLight.png" Margin="7"/>
								</Button>

							</StackPanel>
						</Grid>

					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="DropDownMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Grid x:Name="Grid" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" 
                    Content="{TemplateBinding Icon}"
                    ContentSource="Icon" HorizontalAlignment="Center"
                    Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                    Fill="{TemplateBinding Foreground}" 
                    FlowDirection="LeftToRight" Margin="3"
                    Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                    Content="{TemplateBinding Header}" Grid.Column="1"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                    ContentSource="Header" Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup"
                    AllowsTransparency="True" 
                    Focusable="False" 
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                    Placement="Bottom">
                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource ControlDefaultBorderBrush}" 
                        BorderThickness="2" Background="{StaticResource ControlDefaultBorderBrush}" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" 
                                    VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" 
                                        Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                    Grid.IsSharedSizeScope="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot"  Value="{StaticResource ControlMouseOverBackground}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ControlMouseOverBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Padding" Value="2"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{StaticResource ContainerBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ContainerBorder}"/>
		<Setter Property="BorderThickness" Value="1 0 1 1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<DockPanel>
							<TabPanel x:Name="headerPanel"
                                      Grid.Column="0" IsItemsHost="true" Margin="0 2 0 0"
                                      Grid.Row="0" KeyboardNavigation.TabIndex="1" 
                                      Panel.ZIndex="1"/>
							<Rectangle Fill="{TemplateBinding BorderBrush}" Height="1" VerticalAlignment="Bottom"/>
						</DockPanel>
						<Border x:Name="contentPanel" 
                                        BorderBrush="{TemplateBinding BorderBrush }" 
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" 
                                        Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F0F0F0" Offset="0.0"/>
		<GradientStop Color="#E5E5E5" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.Static.Border" Color="DarkGray"/>
	<LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ECF4FC" Offset="0.0"/>
		<GradientStop Color="#DCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="DarkGray"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
	<Style TargetType="{x:Type TabItem}">
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource ContainerBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ContainerBorder}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="20, 9, 20, 9"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
						<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0,1,1,1" Background="{TemplateBinding Background}" Margin="0">
							<Border x:Name="innerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0"
                                    Background="{TemplateBinding Background}" Margin="-1" Opacity="0"/>
						</Border>
						<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="10,9,10,9" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,4"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,3"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,0,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,0,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="0,-2,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="0,-2,-3,0"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="CloseButton" TargetType="{x:Type TabItem}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0,1,1,1" Background="{TemplateBinding Background}" Margin="0">
				<Border x:Name="innerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0"
                                    Background="{TemplateBinding Background}" Margin="-1" Opacity="0"/>
			</Border>
			<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False"
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="10,9,36,9" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Border  Height="24" VerticalAlignment="Center" HorizontalAlignment="Right" Width="24" Margin="0,8,8,7">
				<Button Background="Transparent" Command="{Binding Path=CloseTabCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Uid}" BorderBrush="{x:Null}" 
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontFamily="Consolas" Content="x"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlMouseOverBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
				<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ControlDisabledBackground}"/>
				<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ControlDisabledBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,4"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,3"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
				<Setter Property="Panel.ZIndex" Value="1"/>
				<Setter Property="Margin" Value="-2,-2,0,-2"/>
				<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
				<Setter Property="Panel.ZIndex" Value="1"/>
				<Setter Property="Margin" Value="-2,0,-2,-2"/>
				<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
				<Setter Property="Panel.ZIndex" Value="1"/>
				<Setter Property="Margin" Value="0,-2,-2,-2"/>
				<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
					<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="{StaticResource ControlSelectedBackground}"/>
				<Setter Property="Panel.ZIndex" Value="1"/>
				<Setter Property="Margin" Value="0,-2,-3,0"/>
				<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
				<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
				<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
			</MultiDataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="AddButtons" TargetType="{x:Type TabControl}">
		<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="ColumnDefinition0"/>
				<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
				<RowDefinition x:Name="RowDefinition1" Height="*"/>
			</Grid.RowDefinitions>
			<StackPanel Orientation="Horizontal">
				<TabPanel x:Name="headerPanel"
                                      Grid.Column="0" IsItemsHost="true" Margin="0 2 0 0"
                                      Grid.Row="0" KeyboardNavigation.TabIndex="1" 
                                      Panel.ZIndex="1"/>
				<Border CornerRadius="3" Height="28"
                                        VerticalAlignment="Center" Background="{StaticResource ContainerBackground}"
                                        HorizontalAlignment="Center" Width="28" Margin="8 0 0 0">
					<Button Background="Transparent" Content="+" Command="{Binding NewTabCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" BorderBrush="{x:Null}"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontFamily="Consolas" FontSize="16" Foreground="{DynamicResource ControlDefaultForeground}"/>
				</Border>
			</StackPanel>
			<Border x:Name="contentPanel" 
                                        BorderBrush="{TemplateBinding BorderBrush }" 
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" 
                                        Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
				<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
				<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
				<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
				<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
				<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
				<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
				<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
				<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
				<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
				<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
				<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
				<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
				<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
				<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
				<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
				<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
				<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
				<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
				<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
				<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
				<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>